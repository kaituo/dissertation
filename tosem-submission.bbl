\begin{thebibliography}{100}

\bibitem{abadiFlanaganFreund06}
Abadi, Mart\'{\i}n, Flanagan, Cormac, and Freund, Stephen~N.
\newblock Types for safe locking: Static race detection for {Java}.
\newblock {\em ACM Transactions on Programming Languages and Systems (TOPLAS)
  28}, 2 (Mar. 2006), 207--255.

\bibitem{ammons02mining}
Ammons, Glenn, Bodik, Rastislav, and Larus, James~R.
\newblock Mining specifications.
\newblock In {\em Proc. 29th ACM SIGPLAN-SIGACT Symposium on Principles of
  Programming Languages (POPL)\/} (Jan. 2002), ACM, pp.~4--16.

\bibitem{Ayewah:2010:GFF:1831708.1831738}
Ayewah, Nathaniel, and Pugh, William.
\newblock The {Google} {FindBugs} fixit.
\newblock In {\em Proc. 19th International Symposium on Software Testing and
  Analysis (ISSTA)\/} (2010), ACM, pp.~241--252.

\bibitem{4531166}
Balzarotti, D., Cova, M., Felmetsger, V., Jovanovic, N., Kirda, E., Kruegel,
  C., and Vigna, Giovanni.
\newblock Saner: Composing static and dynamic analysis to validate sanitization
  in web applications.
\newblock In {\em Security and Privacy, 2008. SP 2008. IEEE Symposium on\/}
  (May 2008), pp.~387--401.

\bibitem{barnett04spec}
Barnett, Mike, Leino, K. Rustan~M., and Schulte, Wolfram.
\newblock The {Spec\#} programming system: An overview.
\newblock In {\em Proc. International Workshop on the Construction and Analysis
  of Safe, Secure, and Interoperable Smart Devices (CASSIS)\/} (Mar. 2004),
  Springer, pp.~49--69.

\bibitem{BehmBCGLOVDPT11}
Behm, Alexander, Borkar, Vinayak~R., Carey, Michael~J., Grover, Raman, Li,
  Chen, Onose, Nicola, Vernica, Rares, Deutsch, Alin, Papakonstantinou, Yannis,
  and Tsotras, Vassilis~J.
\newblock Asterix: towards a scalable, semistructured data platform for
  evolving-world models.
\newblock {\em Distributed and Parallel Databases 29}, 3 (2011), 185--216.

\bibitem{Beschastnikh:2011:LEI:2025113.2025151}
Beschastnikh, Ivan, Brun, Yuriy, Schneider, Sigurd, Sloan, Michael, and Ernst,
  Michael~D.
\newblock Leveraging existing instrumentation to automatically infer
  invariant-constrained models.
\newblock In {\em Proceedings of the 19th ACM SIGSOFT symposium and the 13th
  European conference on Foundations of software engineering\/} (New York, NY,
  USA, 2011), ESEC/FSE '11, ACM, pp.~267--277.

\bibitem{binnig07reverse}
Binnig, Carsten, Kossmann, Donald, and Lo, Eric.
\newblock Reverse query processing.
\newblock In {\em Proc. 23rd International Conference on Data Engineering
  (ICDE)\/} (Apr. 2007), IEEE, pp.~506--515.

\bibitem{BinnigKLO07}
Binnig, Carsten, Kossmann, Donald, Lo, Eric, and {\"O}zsu, M.~Tamer.
\newblock {QAGen}: Generating query-aware test databases.
\newblock In {\em Proc. ACM SIGMOD International Conference on Management of
  Data (SIGMOD)\/} (June 2007), ACM, pp.~341--352.

\bibitem{bodden10efficient}
Bodden, Eric.
\newblock Efficient hybrid typestate analysis by determining
  continuation-equivalent states.
\newblock In {\em Proc. 32nd ACM/IEEE International Conference on Software
  Engineering (ICSE)\/} (May 2010), ACM, pp.~5--14.

\bibitem{bodden07staged}
Bodden, Eric, Hendren, Laurie, and Lhot{\'{a}}k, Ond\v{r}ej.
\newblock A staged static program analysis to improve the performance of
  runtime monitoring.
\newblock In {\em Proc. 21st European Conference on Object-Oriented Programming
  (ECOOP)\/} (July 2007), pp.~525--549.

\bibitem{Bodden2008FPE}
Bodden, Eric, Lam, Patrick, and Hendren, Laurie.
\newblock Finding programming errors earlier by evaluating runtime monitors
  ahead-of-time.
\newblock In {\em Proceedings of the 16th ACM SIGSOFT International Symposium
  on Foundations of Software Engineering\/} (New York, NY, USA, 2008), SIGSOFT
  '08/FSE-16, ACM, pp.~36--47.

\bibitem{bodik00abcd}
Bodik, Rastislav, Gupta, Rajiv, and Sarkar, Vivek.
\newblock {ABCD}: Eliminating array bounds checks on demand.
\newblock In {\em Proc. ACM SIGPLAN Conference on Programming Language Design
  and Implementation (PLDI)\/} (June 2000), ACM, pp.~321--333.

\bibitem{Borges:2012:SEI:2224481.2224897}
Borges, Mateus, d'Amorim, Marcelo, Anand, Saswat, Bushnell, David, and
  Pasareanu, Corina~S.
\newblock Symbolic execution with interval solving and meta-heuristic search.
\newblock In {\em Proceedings of the 2012 IEEE Fifth International Conference
  on Software Testing, Verification and Validation\/} (Washington, DC, USA,
  2012), ICST '12, IEEE Computer Society, pp.~111--120.

\bibitem{Bryant:1999:EPE:647768.760730}
Bryant, Randal~E., German, Steven~M., and Velev, Miroslav~N.
\newblock Exploiting positive equality in a logic of equality with
  uninterpreted functions.
\newblock In {\em Proc. 11th International Conference on Computer Aided
  Verification (CAV)\/} (1999), Springer, pp.~470--482.

\bibitem{Burch:1994:AVP:647763.735662}
Burch, Jerry~R., and Dill, David~L.
\newblock Automatic verification of pipelined microprocessor control.
\newblock In {\em Proc. 6th International Conference on Computer Aided
  Verification (CAV)\/} (1994), Springer, pp.~68--80.

\bibitem{cadar05execution}
Cadar, Cristian, and Engler, Dawson~R.
\newblock Execution generated test cases: How to make systems code crash
  itself.
\newblock In {\em Proc. 12th International SPIN Workshop on Model Checking
  Software\/} (Aug. 2005), Springer, pp.~2--23.

\bibitem{chen07mop}
Chen, Feng, and Ro\c{s}u, Grigore.
\newblock Mop: An efficient and generic runtime verification framework.
\newblock In {\em Proc. 22nd ACM SIGPLAN Conference on Object-Oriented
  Programming, Systems, Languages, and Applications (OOPSLA)\/} (Oct. 2007),
  ACM, pp.~569--588.

\bibitem{Chen:2007:PSC:1770351.1770387}
Chen, Feng, and Ro\c{s}u, Grigore.
\newblock Parametric and sliced causality.
\newblock In {\em Proceedings of the 19th International Conference on Computer
  Aided Verification\/} (Berlin, Heidelberg, 2007), CAV'07, Springer-Verlag,
  pp.~240--253.

\bibitem{Chen:2008:JPR:1368088.1368119}
Chen, Feng, Serbanuta, Traian~Florin, and Rosu, Grigore.
\newblock jpredictor: A predictive runtime analysis tool for java.
\newblock In {\em Proceedings of the 30th International Conference on Software
  Engineering\/} (New York, NY, USA, 2008), ICSE '08, ACM, pp.~221--230.

\bibitem{jwig2003}
Christensen, Aske~Simon, M\o{}ller, Anders, and Schwartzbach, Michael~I.
\newblock Extending {Java} for high-level {Web} service construction.
\newblock {\em ACM Transactions on Programming Languages and Systems 25}, 6
  (November 2003), 814--875.

\bibitem{chugh09staged}
Chugh, Ravi, Meister, Jeffrey~A., Jhala, Ranjit, and Lerner, Sorin.
\newblock Staged information flow for {JavaScript}.
\newblock In {\em Proc. ACM SIGPLAN Conference on Programming Language Design
  and Implementation (PLDI)\/} (June 2009), ACM, pp.~50--62.

\bibitem{cok04escjava2}
Cok, David~R., and Kiniry, Joseph~R.
\newblock {ESC/Java2}: Uniting {ESC/Java} and {JML}: Progress and issues in
  building and using {ESC/Java2}.
\newblock Tech. Rep. NIII-R0413, Nijmegen Institute for Computing and
  Information Science, May 2004.

\bibitem{csallner05check}
Csallner, Christoph, and Smaragdakis, Yannis.
\newblock {Check} 'n' {Crash}: Combining static checking and testing.
\newblock In {\em Proc. 27th ACM/IEEE International Conference on Software
  Engineering (ICSE)\/} (May 2005), ACM, pp.~422--431.

\bibitem{csallner06dsd-crasher}
Csallner, Christoph, and Smaragdakis, Yannis.
\newblock {DSD}-{C}rasher: A hybrid analysis tool for bug finding.
\newblock In {\em Proc. ACM SIGSOFT International Symposium on Software Testing
  and Analysis (ISSTA)\/} (July 2006), ACM, pp.~245--254.

\bibitem{csallner06invariants}
Csallner, Christoph, and Smaragdakis, Yannis.
\newblock Dynamically discovering likely interface invariants.
\newblock In {\em Proc. 28th ACM/IEEE International Conference on Software
  Engineering (ICSE), Emerging Results Track\/} (May 2006), ACM, pp.~861--864.

\bibitem{dysy-icse08}
Csallner, Christoph, Tillmann, Nikolai, and Smaragdakis, Yannis.
\newblock {DySy}: Dynamic symbolic execution for invariant inference.
\newblock In {\em International Conference on Software Engineering ({ICSE})\/}
  (May 2008).

\bibitem{DeMoura:2011:SMT:1995376.1995394}
De~Moura, Leonardo, and Bj{\o}rner, Nikolaj.
\newblock Satisfiability modulo theories: introduction and applications.
\newblock {\em Commun. ACM 54}, 9 (Sept. 2011), 69--77.

\bibitem{Dillig:2012:AED:2254064.2254087}
Dillig, Isil, Dillig, Thomas, and Aiken, Alex.
\newblock Automated error diagnosis using abductive inference.
\newblock In {\em Proceedings of the 33rd ACM SIGPLAN Conference on Programming
  Language Design and Implementation\/} (New York, NY, USA, 2012), PLDI '12,
  ACM, pp.~181--192.

\bibitem{dsouza07}
D'Souza, Derek, Kim, Yoon~Phil, Kral, Tim, Ranade, Tejas, and Sasalatti,
  Somesh.
\newblock Tool evaluation report: {Fortify}.
\newblock
  http://www.cs.cmu.edu/~aldrich/courses/654/tools/dsouza-fortify-07.pdf, Apr.
  2007.
\newblock Accessed Jan. 2014.

\bibitem{dwyer07residual}
Dwyer, Matthew~B., and Purandare, Rahul.
\newblock Residual dynamic typestate analysis exploiting static analysis:
  Results to reformulate and reduce the cost of dynamic analysis.
\newblock In {\em Proc. 22nd IEEE/ACM International Conference on Automated
  Software Engineering (ASE)\/} (Nov. 2007), ACM, pp.~124--133.

\bibitem{Elbaum:2006:CDU:1181775.1181806}
Elbaum, Sebastian, Chin, Hui~Nee, Dwyer, Matthew~B., and Dokulil, Jonathan.
\newblock Carving differential unit test cases from system test cases.
\newblock In {\em Proceedings of the 14th ACM SIGSOFT International Symposium
  on Foundations of Software Engineering\/} (New York, NY, USA, 2006), SIGSOFT
  '06/FSE-14, ACM, pp.~253--264.

\bibitem{emmi07dynamic}
Emmi, Michael, Majumdar, Rupak, and Sen, Koushik.
\newblock Dynamic test input generation for database applications.
\newblock In {\em Proc. ACM SIGSOFT International Symposium on Software Testing
  and Analysis (ISSTA)\/} (July 2007), ACM, pp.~151--162.

\bibitem{racerX}
Engler, Dawson~R., and Ashcraft, Ken.
\newblock {RacerX}: Effective, static detection of race conditions and
  deadlocks.
\newblock In {\em Proc. 19th ACM Symposium on Operating Systems Principles
  (SOSP)\/} (Oct. 2003), ACM, pp.~237--252.

\bibitem{ernst01dynamically}
Ernst, Michael~D., Cockrell, Jake, Griswold, William~G., and Notkin, David.
\newblock Dynamically discovering likely program invariants to support program
  evolution.
\newblock {\em IEEE Transactions on Software Engineering (TSE) 27}, 2 (Feb.
  2001), 99--123.

\bibitem{Flanagan:2009:FEP:1542476.1542490}
Flanagan, Cormac, and Freund, Stephen~N.
\newblock Fasttrack: Efficient and precise dynamic race detection.
\newblock In {\em Proceedings of the 2009 ACM SIGPLAN Conference on Programming
  Language Design and Implementation\/} (New York, NY, USA, 2009), PLDI '09,
  ACM, pp.~121--133.

\bibitem{Flanagan:2010:RDA:1806672.1806674}
Flanagan, Cormac, and Freund, Stephen~N.
\newblock The roadrunner dynamic analysis framework for concurrent programs.
\newblock In {\em Proceedings of the 9th ACM SIGPLAN-SIGSOFT Workshop on
  Program Analysis for Software Tools and Engineering\/} (New York, NY, USA,
  2010), PASTE '10, ACM, pp.~1--8.

\bibitem{flanagan01houdini}
Flanagan, Cormac, and Leino, K. Rustan~M.
\newblock Houdini, an annotation assistant for {ESC/Java}.
\newblock In {\em Proc. International Symposium of Formal Methods Europe
  ({FME})\/} (Mar. 2001), Springer, pp.~500--517.

\bibitem{flanagan02extended}
Flanagan, Cormac, Leino, K. Rustan~M., Lillibridge, Mark, Nelson, Greg, Saxe,
  James~B., and Stata, Raymie.
\newblock Extended static checking for {Java}.
\newblock In {\em Proc. ACM SIGPLAN Conference on Programming Language Design
  and Implementation (PLDI)\/} (June 2002), ACM, pp.~234--245.

\bibitem{fowler1999}
Fowler, Martin, Beck, Kent, Brant, John, Opdyke, William, and Roberts, Don.
\newblock {\em Refactoring: {I}mproving the {D}esign of {E}xisting {C}ode}.
\newblock Addison-Wesley, 1999.

\bibitem{sf100}
Fraser, Gordon, and Arcuri, Andrea.
\newblock Sound empirical evidence in software testing.
\newblock In {\em Proc. International Conference on Software Engineering
  (ICSE)\/} (June 2012), IEEE, pp.~178--188.

\bibitem{Gabel:2010:OIE:1806799.1806806}
Gabel, Mark, and Su, Zhendong.
\newblock Online inference and enforcement of temporal properties.
\newblock In {\em Proceedings of the 32nd ACM/IEEE International Conference on
  Software Engineering - Volume 1\/} (New York, NY, USA, 2010), ICSE '10, ACM,
  pp.~15--24.

\bibitem{gannod95strongest}
Gannod, Gerald~C., and Cheng, Betty H.~C.
\newblock Strongest postcondition semantics as the formal basis for reverse
  engineering.
\newblock In {\em Proc. Second Working Conference on Reverse Engineering
  (WCRE)\/} (July 1995), IEEE, pp.~188--197.

\bibitem{gannod99specification}
Gannod, Gerald~C., and Cheng, Betty H.~C.
\newblock A specification matching based approach to reverse engineering.
\newblock In {\em Proc. International Conference on Software Engineering\/}
  (May 1999), ACM, pp.~389--398.

\bibitem{godefroid05dart}
Godefroid, Patrice, Klarlund, Nils, and Sen, Koushik.
\newblock Dart: Directed automated random testing.
\newblock In {\em Proc. ACM SIGPLAN Conference on Programming Language Design
  and Implementation (PLDI)\/} (June 2005), ACM, pp.~213--223.

\bibitem{Gopinathan:2008:EOP:1449764.1449784}
Gopinathan, Madhu, and Rajamani, Sriram~K.
\newblock Enforcing object protocols by combining static and runtime analysis.
\newblock In {\em Proc. 23rd ACM SIGPLAN Conference on Object-Oriented
  Programming, Systems, Languages, and Applications (OOPSLA)\/} (Oct. 2008),
  ACM, pp.~245--260.

\bibitem{Gould:2004:JCS:998675.999476}
Gould, Carl, Su, Zhendong, and Devanbu, Premkumar.
\newblock {JDBC} checker: A static analysis tool for {SQL/JDBC} applications.
\newblock In {\em Proc. International Conference on Software Engineering
  (ICSE)\/} (May 2004), IEEE, pp.~697--698.

\bibitem{griswold90program}
Griswold, W.~G., and Notkin, D.
\newblock {Program Restructuring as an Aid to Software Maintenance}.
\newblock Tech. rep., University of Washington, Seattle, WA, USA, August 1990.

\bibitem{dyncomp}
Guo, Philip~J., Perkins, Jeff~H., McCamant, Stephen, and Ernst, Michael~D.
\newblock Dynamic inference of abstract types.
\newblock In {\em Proceedings of the 2006 international symposium on Software
  testing and analysis\/} (New York, NY, USA, 2006), ISSTA '06, ACM,
  pp.~255--265.

\bibitem{guyer99annotation}
Guyer, Samuel~Z., and Lin, Calvin.
\newblock An annotation language for optimizing software libraries.
\newblock In {\em Second Conference on {D}omain-{S}pecific {L}anguages
  ({DSL})\/} (1999), pp.~39--52.

\bibitem{halfond05woda}
Halfond, William~G.J., and Orso, Alessandro.
\newblock {Combining Static Analysis and Runtime Monitoring to Counter
  SQL-Injection Attacks}.
\newblock In {\em Proc. 3rd International Workshop on Dynamic Analysis
  (WODA)\/} (May 2005), pp.~22--28.

\bibitem{hangal02tracking}
Hangal, Sudheendra, and Lam, Monica~S.
\newblock Tracking down software bugs using automatic anomaly detection.
\newblock In {\em Proc. 24th ACM/IEEE International Conference on Software
  Engineering (ICSE)\/} (May 2002), ACM, pp.~291--301.

\bibitem{henkel07discovering}
Henkel, Johannes, Reichenbach, Christoph, and Diwan, Amer.
\newblock Discovering documentation for {Java} container classes.
\newblock {\em IEEE Transactions on Software Engineering (TSE) 33}, 8 (Aug.
  2007), 526--543.

\bibitem{henkel08debugging}
Henkel, Johannes, Reichenbach, Christoph, and Diwan, Amer.
\newblock {Developing and Debugging Algebraic Specifications for Java classes}.
\newblock {\em ACM Trans. Softw. Eng. Methodol. 17}, 3 (2008).

\bibitem{hovemeyer04finding}
Hovemeyer, David, and Pugh, William.
\newblock Finding bugs is easy.
\newblock In {\em Companion to the 19th ACM SIGPLAN Conference on
  Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA)\/}
  (Oct. 2004), ACM, pp.~132--136.

\bibitem{hovemeyer04finding-notices}
Hovemeyer, David, and Pugh, William.
\newblock Finding bugs is easy.
\newblock {\em SIGPLAN Notices 39}, 12 (Dec. 2004), 92--106.

\bibitem{hovemeyer07finding}
Hovemeyer, David, and Pugh, William.
\newblock Finding more null pointer bugs, but not too many.
\newblock In {\em Proc. 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis
  for Software Tools and Engineering (PASTE)\/} (June 2007), ACM, pp.~9--14.

\bibitem{Huang:2004:SWA:988672.988679}
Huang, Yao-Wen, Yu, Fang, Hang, Christian, Tsai, Chung-Hung, Lee, Der-Tsai, and
  Kuo, Sy-Yen.
\newblock Securing web application code by static analysis and runtime
  protection.
\newblock In {\em Proceedings of the 13th International Conference on World
  Wide Web\/} (New York, NY, USA, 2004), WWW '04, ACM, pp.~40--52.

\bibitem{Isard:2007:DDD:1272996.1273005}
Isard, Michael, Budiu, Mihai, Yu, Yuan, Birrell, Andrew, and Fetterly, Dennis.
\newblock Dryad: Distributed data-parallel programs from sequential building
  blocks.
\newblock In {\em Proc. 2nd ACM SIGOPS/EuroSys European Conference on Computer
  Systems (EuroSys)\/} (2007), ACM, pp.~59--72.

\bibitem{Islam:2010:DTC:1868321.1868326}
Islam, Mainul, and Csallner, Christoph.
\newblock Dsc+mock: a test case + mock class generator in support of coding
  against interfaces.
\newblock In {\em Proceedings of the Eighth International Workshop on Dynamic
  Analysis\/} (New York, NY, USA, 2010), WODA '10, ACM, pp.~26--31.

\bibitem{Islam14Generating}
Islam, Mainul, and Csallner, Christoph.
\newblock Generating test cases for programs that are coded against interfaces
  and annotations.
\newblock {\em ACM Transactions on Software Engineering and Methodology (TOSEM)
  23\/} (May 2014), 21:1--21:38.

\bibitem{kannan08krystal}
Kannan, Yamini, and Sen, Koushik.
\newblock Universal symbolic execution and its application to likely data
  structure invariant generation.
\newblock In {\em ISSTA '08: Proceedings of the 2008 Int. Symposium on Software
  Testing and Analysis\/} (New York, NY, USA, 2008), ACM, pp.~283--294.

\bibitem{aspectj}
Kiczales, Gregor, Hilsdale, Erik, Hugunin, Jim, Kersten, Mik, Palm, Jeffrey,
  and Griswold, William~G.
\newblock An overview of {AspectJ}.
\newblock In {\em Proc. 15th European Conference on Object Oriented Programming
  (ECOOP)\/} (June 2001), Springer, pp.~327--353.

\bibitem{kim2007}
Kim, Sunghun, and Ernst, Michael~D.
\newblock Which warnings should {I} fix first?
\newblock In {\em Proc. 11th European Software Engineering Conference and the
  15th {ACM} {SIGSOFT} Symposium on Foundations of Software Engineering
  (ESEC/FSE)\/} (Sept. 2007), ACM, pp.~45--54.

\bibitem{kremenek2004}
Kremenek, Ted, Ashcraft, Ken, Yang, Junfeng, and Engler, Dawson.
\newblock Correlation exploitation in error ranking.
\newblock In {\em Proc. 12th ACM SIGSOFT International Symposium on Foundations
  of Software Engineering (FSE)\/} (Oct. 2004), ACM, pp.~83--93.

\bibitem{Lahiri09staticand}
Lahiri, Shuvendu~K., Qadeer, Shaz, and Rakamari{\'c}, Zvonimir.
\newblock Static and precise detection of concurrency errors in systems code
  using smt solvers.
\newblock In {\em Proc. 21st International Conference on Computer Aided
  Verification (CAV)\/} (June 2009), Springer, pp.~509--524.

\bibitem{leavens98preliminary}
Leavens, Gary~T., Baker, Albert~L., and Ruby, Clyde.
\newblock Preliminary design of {JML}: A behavioral interface specification
  language for {Java}.
\newblock Tech. Rep. TR98-06y, Department of Computer Science, Iowa State
  University, June 1998.

\bibitem{li10dynamic}
Li, Chengkai, and Csallner, Christoph.
\newblock Dynamic symbolic database application testing.
\newblock In {\em Proc. 3rd International Workshop on Testing Database Systems
  (DBTest)\/} (June 2010), ACM.

\bibitem{rfbi-issta12}
Li, Kaituo, Reichenbach, Christoph, Csallner, Christoph, and Smaragdakis,
  Yannis.
\newblock Residual investigation: Predictive and precise bug detection.
\newblock In {\em Proc. International Symposium on Software Testing and
  Analysis ({ISSTA})\/} (July 2012), ACM, pp.~298--308.

\bibitem{1081755}
Li, Zhenmin, and Zhou, Yuanyuan.
\newblock {PR}-miner: automatically extracting implicit programming rules and
  detecting violations in large software code.
\newblock In {\em Proc. 13th International Symposium on Foundations of Software
  Engineering (FSE)\/} (Sept. 2005), ACM, pp.~306--315.

\bibitem{liang09JNI}
Liang, Sheng.
\newblock {\em Java Native Interface: Programmer's Guide and Specification}.
\newblock Prentice Hall, June 1999.

\bibitem{logozzo04automatic}
Logozzo, Francesco.
\newblock Automatic inference of class invariants, 2004.

\bibitem{logozzo-phd}
Logozzo, Francesco.
\newblock {\em Modular Static Analysis of Object-Oriented Languages}.
\newblock PhD thesis, Ecole Polytechnique, June 2004.

\bibitem{Majumdar:2007:HCT:1248820.1248874}
Majumdar, Rupak, and Sen, Koushik.
\newblock Hybrid concolic testing.
\newblock In {\em Proceedings of the 29th International Conference on Software
  Engineering\/} (Washington, DC, USA, 2007), ICSE '07, IEEE Computer Society,
  pp.~416--426.

\bibitem{marcozzi12test}
Marcozzi, Micha{\"e}l, Vanhoof, Wim, and Hainaut, Jean-Luc.
\newblock Test input generation for database programs using relational
  constraints.
\newblock In {\em Proc. 5th International Workshop on Testing Database Systems
  (DBTest)\/} (May 2012), ACM.

\bibitem{MeghaniE2003}
Meghani, Samir~V., and Ernst, Michael~D.
\newblock Determining legal method call sequences in object interfaces, May
  2003.

\bibitem{mens-survey}
Mens, Tom, and Tourwe, Tom.
\newblock A survey of software refactoring.
\newblock {\em IEEE Trans. Softw. Eng. 30}, 2 (2004), 126--139.

\bibitem{meyer97Object}
Meyer, Bertrand.
\newblock {\em Object-Oriented Software Construction}, second~ed.
\newblock Prentice Hall, Apr. 1997.

\bibitem{musuvathi03lessons}
Musuvathi, Madanlal, and Engler, Dawson.
\newblock Some lessons from using static analysis and software model checking
  for bug finding.
\newblock In {\em Proc. Workshop on Software Model Checking (SoftMC)\/} (July
  2003), Elsevier.

\bibitem{Naik:2007:CMA:1190216.1190265}
Naik, Mayur, and Aiken, Alex.
\newblock Conditional must not aliasing for static race detection.
\newblock In {\em Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages\/} (New York, NY, USA, 2007), POPL
  '07, ACM, pp.~327--338.

\bibitem{naik06}
Naik, Mayur, Aiken, Alex, and Whaley, John.
\newblock Effective static race detection for {Java}.
\newblock In {\em Proc. ACM SIGPLAN Conference on Programming Language Design
  and Implementation (PLDI)\/} (June 2006), ACM, pp.~308--319.

\bibitem{Newsome05dynamictaint}
Newsome, James.
\newblock Dynamic taint analysis for automatic detection, analysis, and
  signature generation of exploits on commodity software.
\newblock In {\em Proc. Network and Distributed System Security Symposium
  (NDSS)\/} (Feb. 2005), The Internet Society.

\bibitem{Okur:2012:DUP:2393596.2393660}
Okur, Semih, and Dig, Danny.
\newblock How do developers use parallel libraries?
\newblock In {\em Proceedings of the ACM SIGSOFT 20th International Symposium
  on the Foundations of Software Engineering\/} (New York, NY, USA, 2012), FSE
  '12, ACM, pp.~54:1--54:11.

\bibitem{Olston:2009:GED:1559845.1559873}
Olston, Christopher, Chopra, Shubham, and Srivastava, Utkarsh.
\newblock Generating example data for dataflow programs.
\newblock In {\em Proc. 2009 ACM SIGMOD International Conference on Management
  of Data (SIGMOD)\/} (2009), ACM, pp.~245--256.

\bibitem{Olston:2008:PLN:1376616.1376726}
Olston, Christopher, Reed, Benjamin, Srivastava, Utkarsh, Kumar, Ravi, and
  Tomkins, Andrew.
\newblock Pig latin: A not-so-foreign language for data processing.
\newblock In {\em Proc. ACM SIGMOD International Conference on Management of
  Data (SIGMOD)\/} (2008), ACM, pp.~1099--1110.

\bibitem{pan11generating}
Pan, Kai, Wu, Xintao, and Xie, Tao.
\newblock Generating program inputs for database application testing.
\newblock In {\em Proc. 26th IEEE/ACM International Conference on Automated
  Software Engineering (ASE)\/} (Nov. 2011), IEEE, pp.~73--82.

\bibitem{perkins04efficient}
Perkins, Jeff~H., and Ernst, Michael~D.
\newblock Efficient incremental algorithms for dynamic detection of likely
  invariants.
\newblock In {\em Proc. 12th ACM SIGSOFT International Symposium on Foundations
  of Software Engineering (FSE)\/} (Oct. 2004), ACM, pp.~23--32.

\bibitem{Pasareanu:2008:CUS:1390630.1390635}
P\v{a}s\v{a}reanu, Corina~S., Mehlitz, Peter~C., Bushnell, David~H.,
  Gundy-Burlet, Karen, Lowry, Michael, Person, Suzette, and Pape, Mark.
\newblock Combining unit-level symbolic execution and system-level concrete
  execution for testing nasa software.
\newblock In {\em Proceedings of the 2008 International Symposium on Software
  Testing and Analysis\/} (New York, NY, USA, 2008), ISSTA '08, ACM,
  pp.~15--26.

\bibitem{Radoi:2013:PSR:2483760.2483765}
Radoi, Cosmin, and Dig, Danny.
\newblock Practical static race detection for java parallel loops.
\newblock In {\em Proceedings of the 2013 International Symposium on Software
  Testing and Analysis\/} (New York, NY, USA, 2013), ISSTA 2013, ACM,
  pp.~178--190.

\bibitem{reichenbach09pm}
Reichenbach, Christoph, Coughlin, Devin, and Diwan, Amer.
\newblock {Program Metamorphosis}.
\newblock In {\em European Conference on Object-Oriented Programming (ECOOP)\/}
  (2009), Springer, pp.~394--418.

\bibitem{rutar04comparison}
Rutar, Nick, Almazan, Christian~B., and Foster, Jeffrey~S.
\newblock A comparison of bug finding tools for {Java}.
\newblock In {\em Proc. 15th IEEE International Symposium on Software
  Reliability Engineering (ISSRE)\/} (Nov. 2004), IEEE, pp.~245--256.

\bibitem{266641}
Savage, Stefan, Burrows, Michael, Nelson, Greg, Sobalvarro, Patrick, and
  Anderson, Thomas.
\newblock Eraser: A dynamic data race detector for multi-threaded programs.
\newblock In {\em Proc. 16th Symposium on Operating Systems Principles
  (SOSP)\/} (Oct. 1997), ACM, pp.~27--37.

\bibitem{Schwartz:2010:YEW:1849417.1849981}
Schwartz, Edward~J., Avgerinos, Thanassis, and Brumley, David.
\newblock All you ever wanted to know about dynamic taint analysis and forward
  symbolic execution (but might have been afraid to ask).
\newblock In {\em Proceedings of the 2010 IEEE Symposium on Security and
  Privacy\/} (Washington, DC, USA, 2010), SP '10, IEEE Computer Society,
  pp.~317--331.

\bibitem{Sen:2006:CJC:2135909.2135962}
Sen, Koushik, and Agha, Gul.
\newblock Cute and {jCute}: Concolic unit testing and explicit path
  model-checking tools.
\newblock In {\em Proc. 18th International Conference on Computer Aided
  Verification (CAV)\/} (Aug. 2006), Springer, pp.~419--423.

\bibitem{smaragdakis07combining}
Smaragdakis, Yannis, and Csallner, Christoph.
\newblock Combining static and dynamic reasoning for bug detection.
\newblock In {\em Proc. 1st International Conference on Tests And Proofs
  (TAP)\/} (Feb. 2007), Springer, pp.~1--16.

\bibitem{DBLP:conf/tap/SmaragdakisC07}
Smaragdakis, Yannis, and Csallner, Christoph.
\newblock Combining static and dynamic reasoning for bug detection.
\newblock In {\em TAP\/} (2007), Yuri Gurevich and Bertrand Meyer, Eds.,
  vol.~4454 of {\em Lecture Notes in Computer Science}, Springer, pp.~1--16.

\bibitem{orm-ase07}
Smaragdakis, Yannis, Csallner, Christoph, and Subramanian, Ranjith.
\newblock Scalable automatic test data generation from modeling diagrams.
\newblock In {\em {A}utomated {S}oftware {E}ngineering conference ({ASE})\/}
  (Nov. 2007), ACM Press, pp.~4--13.

\bibitem{Smaragdakis:2012:SPR:2103656.2103702}
Smaragdakis, Yannis, Evans, Jacob, Sadowski, Caitlin, Yi, Jaeheon, and
  Flanagan, Cormac.
\newblock Sound predictive race detection in polynomial time.
\newblock In {\em Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages\/} (New York, NY, USA, 2012), POPL
  '12, ACM, pp.~387--400.

\bibitem{warlock}
Sterling, Nicholas.
\newblock Warlock: A static data race analysis tool.
\newblock In {\em USENIX Winter Technical Conference\/} (Jan. 1993), Usenix,
  pp.~97--106.

\bibitem{10.1109/ASE.2004.10075}
Taghdiri, Mana.
\newblock Inferring specifications to detect errors in code.
\newblock In {\em Proc. 19th IEEE International Conference on Automated
  Software Engineering (ASE)\/} (Sept. 2004), IEEE, pp.~144--153.

\bibitem{ThusooSJSCALWM09}
Thusoo, Ashish, Sarma, Joydeep~Sen, Jain, Namit, Shao, Zheng, Chakka, Prasad,
  Anthony, Suresh, Liu, Hao, Wyckoff, Pete, and Murthy, Raghotham.
\newblock Hive - a warehousing solution over a map-reduce framework.
\newblock {\em PVLDB 2}, 2 (2009), 1626--1629.

\bibitem{tillmann08pex}
Tillmann, Nikolai, and de~Halleux, Jonathan.
\newblock Pex - white box test generation for {.Net}.
\newblock In {\em Proc. 2nd International Conference on Tests And Proofs
  (TAP)\/} (Apr. 2008), Springer, pp.~134--153.

\bibitem{Tillmann:2008:PWB:1792786.1792798}
Tillmann, Nikolai, and De~Halleux, Jonathan.
\newblock Pex: White box test generation for {.Net}.
\newblock In {\em Proc. 2nd International Conference on Tests and Proofs
  (TAP)\/} (2008), Springer, pp.~134--153.

\bibitem{tomb07variably}
Tomb, Aaron, Brat, Guillaume~P., and Visser, Willem.
\newblock Variably interprocedural program analysis for runtime error
  detection.
\newblock In {\em Proc. ACM SIGSOFT International Symposium on Software Testing
  and Analysis (ISSTA)\/} (July 2007), ACM, pp.~97--107.

\bibitem{tuya10full}
Tuya, Javier, Su\'{a}rez-Cabal, Mar\'{\i}a~Jos{\'e}, and de~la Riva, Claudio.
\newblock Full predicate coverage for testing {SQL} database queries.
\newblock {\em Software Testing, Verification \& Reliability (STVR) 20}, 3
  (Sept. 2010), 237--288.

\bibitem{veanes10qex}
Veanes, Margus, Tillmann, Nikolai, and de~Halleux, Jonathan.
\newblock Qex: Symbolic {SQL} query explorer.
\newblock In {\em Proc. 16th International Conference on Logic for Programming,
  Artificial Intelligence, and Reasoning (LPAR)\/} (Apr. 2010), Springer,
  pp.~425--446.

\bibitem{relay}
Voung, Jan~Wen, Jhala, Ranjit, and Lerner, Sorin.
\newblock Relay: Static race detection on millions of lines of code.
\newblock In {\em Proc. ACM SIGSOFT International Symposium on Foundations of
  Software Engineering (FSE)\/} (Sept. 2007), ACM, pp.~205--214.

\bibitem{wagner05comparing}
Wagner, Stefan, J{\"u}rjens, Jan, Koller, Claudia, and Trischberger, Peter.
\newblock Comparing bug finding tools with reviews and tests.
\newblock In {\em Proc. 17th IFIP TC6/WG 6.1 International Conference on
  Testing of Communicating Systems (TestCom)\/} (May 2005), Springer,
  pp.~40--55.

\bibitem{whaley-automatic}
Whaley, John, Martin, Michael~C., and Lam, Monica~S.
\newblock Automatic extraction of object-oriented component interfaces.
\newblock In {\em Proc. International Symposium on Software Testing and
  Analysis (ISSTA)\/} (July 2002), ACM, pp.~218--228.

\bibitem{Xiao:2011:PIP:1985793.1985876}
Xiao, Xusheng, Xie, Tao, Tillmann, Nikolai, and de~Halleux, Jonathan.
\newblock Precise identification of problems for structural test generation.
\newblock In {\em Proceedings of the 33rd International Conference on Software
  Engineering\/} (New York, NY, USA, 2011), ICSE '11, ACM, pp.~611--620.

\bibitem{Xie2012SCAM}
Xie, Tao.
\newblock Cooperative testing and analysis: Human-tool, tool-tool and
  human-human cooperations to get work done.
\newblock In {\em Source Code Analysis and Manipulation (SCAM), 2012 IEEE 12th
  International Working Conference on\/} (2012), pp.~1--3.

\bibitem{996832}
Yang, Jinlin, and Evans, David.
\newblock Dynamically inferring temporal properties.
\newblock In {\em Proc. 5th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis
  for Software Tools and Engineering (PASTE)\/} (June 2004), ACM, pp.~23--28.

\bibitem{zitser04testing}
Zitser, Misha, Lippmann, Richard, and Leek, Tim.
\newblock Testing static analysis tools using exploitable buffer overflows from
  open source code.
\newblock In {\em Proc. 12th ACM SIGSOFT International Symposium on Foundations
  of Software Engineering (FSE)\/} (Oct. 2004), ACM, pp.~97--106.

\end{thebibliography}
